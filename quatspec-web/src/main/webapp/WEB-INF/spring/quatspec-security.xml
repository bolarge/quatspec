<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   		http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- <security:debug/> -->
	<security:global-method-security pre-post-annotations="enabled"/>
    <security:http-firewall ref="httpFireWall"/>
    
    <!-- Guest URL -->
	<security:http auto-config="true" pattern="/guest/**" use-expressions="true">  
        <security:intercept-url pattern="/visitor/*" access="permitAll()" />                      
	</security:http>
	<!--\END Guest  -->

	<!-- REST Authentication -->
	<security:http realm="API Realm"  pattern="/api/**" use-expressions="true" authentication-manager-ref="apiAuthenticationManager">  
        <security:intercept-url pattern="/api/*" access="hasAuthority('ROLE_ADMIN')" />
        <security:http-basic/>
        <security:logout delete-cookies="JSESSIONID" />
        <security:headers/>
        <security:csrf disabled="true" />                        
	</security:http>
	<!--\END REST Authentication  -->
	
	<!--Form Authentication  -->
    <security:http auto-config="false" disable-url-rewriting="true" use-expressions="true" create-session="ifRequired" entry-point-ref="authenticationEntryPoint" authentication-manager-ref="defaultAuthenticationManager"> 
        <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
        <security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter"/>
        <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
        <security:session-management session-authentication-strategy-ref="sas" invalid-session-url="/login?msg=expired"/>
        <security:csrf token-repository-ref="tokenRepository"/>
        <security:access-denied-handler error-page="/login?msg=not_allowed"/>
      
        <security:headers>
            <security:frame-options policy="SAMEORIGIN" />
            <security:hsts include-subdomains="true"/>
        </security:headers>
        
        <security:intercept-url pattern="/js/*" access="permitAll"/>
        <security:intercept-url pattern="/css/*" access="permitAll"/>
        <security:intercept-url pattern="/login" access="permitAll"/>
        <security:intercept-url pattern="/*" access="isAuthenticated()"/>

        <security:port-mappings>
            <security:port-mapping http="8181" https="443"/>
        </security:port-mappings>        
    </security:http>
    <!--\END Form Authentication -->
     
    <bean id="httpFireWall" class="org.springframework.security.web.firewall.StrictHttpFirewall">
        <property name="allowSemicolon" value="true"/>
    </bean>
    
    <bean id="tokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"/>

    <bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="defaultAuthenticationManager"/>
        <property name="authenticationFailureHandler" ref="quatspecSecurityAuthenticationFailureHandler"/>
        <property name="authenticationSuccessHandler" ref="quatspecSecurityAuthenticationSuccessHandler"/>
        <property name="sessionAuthenticationStrategy" ref ="sas"/>
        <property name="usernameParameter" value="j_username"/>
        <property name="passwordParameter" value="j_password"/>
        <property name="filterProcessesUrl" value="/j_spring_security_check"/>
    </bean>
    
    <security:authentication-manager id="apiAuthenticationManager" alias="apiAuthenticationManager">  
    	<security:authentication-provider ref="quatspecRestAuthenticationProvider"/>    	 	         
    </security:authentication-manager>
    
	<security:authentication-manager alias="defaultAuthenticationManager" id="defaultAuthenticationManager">  
        <security:authentication-provider user-service-ref="quatspecDatabaseUserDetailsManager">
            <security:password-encoder ref="quatspecSecurityPasswordEncoder"/>
        </security:authentication-provider>          
    </security:authentication-manager>
    
    <bean id="logoutRequestMatcher" class="com.quatspec.web.security.QuatspecLogoutRequestMatcher">
        <property name="antPathRequestMatchers">
            <list>
                <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                    <constructor-arg type="java.lang.String" value="/signout"/>
                </bean>
                <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                    <constructor-arg type="java.lang.String" value="/admin/signout"/>
                </bean>
            </list>
        </property>
    </bean>
    
    <bean id="logoutFilter" class="com.quatspec.web.security.QuatspecSecurityLogoutFilter">
        <constructor-arg index="0" ref="quatspeclogoutSecurityHandler"/>
        <constructor-arg index="1">
            <list>
                <bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
                <bean id="cookieClearingHandler" class="org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
                    <constructor-arg index="0">
                        <list>
                            <value>JSESSIONID</value>
                        </list>
                    </constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <property name="logoutRequestMatcher" ref="logoutRequestMatcher"/>
        <property name="urlUtilityRequestServiceHandler" ref="urlUtilityRequestServiceHandler"/>
    </bean>
    
    <bean id="authenticationEntryPoint"  class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/login?"/>
    </bean>
    
    <bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <constructor-arg index="0" ref="sessionRegistry"/>
        <constructor-arg index="1" value="/login?msg=expired"/>
    </bean>

    <bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
        <constructor-arg ref="httpSessionSecurityContextRepository" />
        <constructor-arg ref="sas"/>
    </bean>
    
    <bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>

    <bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                    <property name="maximumSessions" value="1" />
                    <property name="exceptionIfMaximumExceeded" value="false"/>
                </bean>
                <bean id="registerSessionAuthenticationStrategy" class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="sessionRegistry"  class="org.springframework.security.core.session.SessionRegistryImpl" />

</beans>